const placeholders = {
    '{f_zavz9t}': `---
<center>
### [![](https://s19.postimg.cc/855m162ab/27cb8858fa0dfe41d2b1190533c8af9a63-32x32.png) SteemIt](https://steemit.com/@zavz9t) [![](https://s19.postimg.cc/6er6dbmyr/download-32x32.jpg) WhaleShares](https://whaleshares.io/@zavz9t) [![](https://s19.postimg.cc/7tsr21vrn/1480-32x32.png) Golos](https://golos.io/@zavz9t) [![VOX](https://s19.postimg.cc/fgjyfjt4j/vox-32.png)](https://vox.community/@zavz9t)
</center>
`,
    '{f_lego-cat}': `---
<center>
### [![](https://s19.postimg.cc/855m162ab/27cb8858fa0dfe41d2b1190533c8af9a63-32x32.png) SteemIt](https://steemit.com/@lego-cat) [![](https://s19.postimg.cc/6er6dbmyr/download-32x32.jpg) WhaleShares](https://whaleshares.io/@lego-cat) [![](https://s19.postimg.cc/7tsr21vrn/1480-32x32.png) Golos](https://golos.io/@lego-cat) [![VOX](https://s19.postimg.cc/fgjyfjt4j/vox-32.png)](https://vox.community/@lego-cat)
</center>
`,
    '{f_v-mi}': `---
<center>
### [![](https://s19.postimg.cc/855m162ab/27cb8858fa0dfe41d2b1190533c8af9a63-32x32.png) SteemIt](https://steemit.com/@v-mi) [![](https://s19.postimg.cc/6er6dbmyr/download-32x32.jpg) WhaleShares](https://whaleshares.io/@v-mi) [![](https://s19.postimg.cc/7tsr21vrn/1480-32x32.png) Golos](https://golos.io/@v-mi) [![VOX](https://s19.postimg.cc/fgjyfjt4j/vox-32.png)](https://vox.community/@v-mi)
</center>
`,
    '{f_cp_ua}': `---

## –î–µ–∫—ñ–ª—å–∫–∞ —Å–ª—ñ–≤ –ø—Ä–æ —Ç–µ, –∫—É–¥–∏ –í–∏ –ø–æ–ø–∞–ª–∏

–î–∞–Ω–∏–π —Ä–æ–∑–¥—ñ–ª –ø–æ—á–∏–Ω–∞–≤—Å—è –∑ —Ç–æ–≥–æ, —â–æ —è –¥—ñ–ª–∏–≤—Å—è –≥–æ—Ä–Ω—è—Ç–∫–∞–º–∏ –∫–∞–≤–∏, —è–∫—ñ —è –æ—Ç—Ä–∏–º—É–≤–∞–≤ —ñ –±–∞—á–∏–≤ —É —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ö –∑–∞–∫–ª–∞–¥–∞—Ö. –û—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ —á–∞—Å—Ç–æ –±—É–≤–∞–ª–∏ —è—Å–∫—Ä–∞–≤–∏–º–∏ —Ç–∞ –≤–µ—Å–µ–ª–∏–º–∏, —Ç–æ —è –≤–∏—Ä—ñ—à–∏–≤ –Ω–∏–º–∏ –¥—ñ–ª–∏—Ç–∏—Å—è –∑ —Ç–∏–º–∏, –∫–æ–º—É —Ü–µ —Ü—ñ–∫–∞–≤–æ. –ü—ñ–∑–Ω—ñ—à–µ, —è –ø–æ–±–∞—á–∏–≤, —â–æ —î –±–∞–≥–∞—Ç–æ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ö –≥–æ—Ä–Ω—è—Ç–æ–∫ –Ω–∞–≤–∫–æ–ª–æ, —Ç–æ —è –ø–æ—á–∞–≤ –¥—ñ–ª–∏—Ç–∏—Å—è —ñ –Ω–∏–º–∏ —Ç–∞–∫–æ–∂, –∞ –Ω–∞–∑–≤–∞ –∑–∞–ª–∏—à–∏–ª–∞—Å—è, —è–∫ –æ–∑–Ω–∞–∫–∞ —Ç–æ–≥–æ, –∑ —á–æ–≥–æ –≤—Å–µ –ø–æ—á–∞–ª–æ—Å—è üòâ

<center>![](https://s19.postimg.cc/bw7u1jeyr/shutterstock_1012867498.jpg)</center>
`,
    '{f_cp_ru}': `---

## –ù–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –æ —Ç–æ–º, –∫—É–¥–∞ –í—ã –ø–æ–ø–∞–ª–∏

–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∞—á–∏–Ω–∞–ª—Å—è —Å —Ç–æ–≥–æ, —á—Ç–æ —è –¥–µ–ª–∏–ª—Å—è —á–∞—à–µ—á–∫–∞–º–∏ –∫–æ—Ñ–µ, –∫–æ—Ç–æ—Ä—ã–µ —è –≤–∏–¥–µ–ª –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö. –ü–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –±—ã–ª–∏ –≤–µ—Å—ë–ª—ã–º–∏ –∏ –∑–∞–±–∞–≤–Ω—ã–º–∏, —Ç–æ —è —Ä–µ—à–∏–ª –Ω–∏–º–∏ –¥–µ–ª–∏—Ç—å—Å—è —Å —Ç–µ–º–∏, –∫–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ. –ü–æ–∑–∂–µ —è —É–≤–∏–¥–µ–ª –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —á–∞—à–µ–∫ –±–µ–∑ –∫–æ—Ñ–µ –∏ –Ω–µ —Å–º–æ–≥ –ø—Ä–æ–π—Ç–∏ –º–∏–º–æ, –∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–ª–æ—Å—å –∫–∞–∫ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç–æ–º, —Å —á–µ–≥–æ –≤—Å–µ –Ω–∞—á–∞–ª–æ—Å—å üòâ

<center>![](https://s19.postimg.cc/bw7u1jeyr/shutterstock_1012867498.jpg)</center>

---

<center>–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –ø–æ—Å—Ç–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –≤ –±–ª–æ–∑—ñ @zavz9t</center>
`,
    '{f_ad_ua}': `---

### –î–µ–∫—ñ–ª—å–∫–∞ —Å–ª—ñ–≤ –ø—Ä–æ —Ä–æ–∑–¥—ñ–ª

–í –∫–Ω–∏–∂—Ü—ñ **"–ë–æ–≥ –∑–∞–≤–∂–¥–∏ –ø–æ–¥–æ—Ä–æ–∂—É—î —ñ–Ω–∫–æ–≥–Ω—ñ—Ç–æ"** —è –ø—Ä–æ—á–∏—Ç–∞–≤ –ø—Ä–æ –º–µ—Ç–æ–¥ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è/—Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å–∞–º–æ–æ—Ü—ñ–Ω–∫–∏, –≤–æ–Ω–∞ –∂ –≤–ø–µ–≤–Ω–µ–Ω—ñ—Å—Ç—å —É —Å–æ–±—ñ: –ø—Ä–æ—Ç—è–≥–æ–º 100 –¥–Ω—ñ–≤ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –º—ñ–Ω—ñ–º—É–º 3 —Ä–µ—á—ñ, —è–∫–∏–º–∏ –ø–∏—à–∞—î—à—Å—è, –∑–∞–≤–¥—è–∫–∏ —è–∫–∏–º - –¥–µ–Ω—å –Ω–µ –ø—Ä–æ–π—à–æ–≤ –¥–∞—Ä–º–∞. –ú–µ–Ω–µ —Ü–µ –∑–∞—Ü—ñ–∫–∞–≤–∏–ª–æ, —Ç–æ —è –≤–∏—Ä—ñ—à–∏–≤ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏.

<center>**–ü–æ–¥–∏–≤–∏–º–æ—Å—å —â–æ –∑ —Ü—å–æ–≥–æ –≤–∏–π–¥–µ üôÇ**</center>

---

<center>[–î–∂–µ—Ä–µ–ª–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏](https://pixabay.com/en/list-icon-symbol-paper-sign-flat-2389219/)</center>
`
};

let steem = require(`@steemit/steem-js`),
    vox = require(`@steemit/steem-js`),
    golos = require(`golos-js`),
    wlsjs = require(`wlsjs-staging`)
;

function publishToGolos(
    wif,
    author,
    permlink,
    parentAuthor,
    parentPermlink,
    postTitle,
    postBody,
    jsonMetadata,
    declinePayout,
    allInPower,
    beneficiaries,
    publishAsGolosio,
    publishForVik
) {
    let section = 'golos',
        placeholdersLocal = {
            '{img_p_4}': `https://imgp.golos.io/400x0/`,
            '{img_p_8}': `https://imgp.golos.io/800x0/`
        };

    if (false === tool.isTest() && false === golos.auth.isWif(wif)) {
        return alert('–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å—Ç–∏–Ω–≥ –∫–ª—é—á–∞. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π –≤–ª–µ—á–µ—Ç –ø–æ—Ç–µ—Ä—é –∞–∫–∫–∞—É–Ω—Ç–∞!');
    }

    let beneficiariesLocal = JSON.parse(JSON.stringify(beneficiaries));

    if (publishAsGolosio) {
        beneficiariesLocal.push({"account": "golosio", "weight": 1000});
    }
    if (publishForVik) {
        beneficiariesLocal.push({"account": "netfriend", "weight": 1000});
        beneficiariesLocal.push({"account": "vik", "weight": publishForVik * 1});
    }

    for (let key in placeholdersLocal) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholdersLocal[key]);
    }
    for (let key in placeholders) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholders[key]);
    }
    postBody = tool.stripPlaceholders(postBody);

    let operations = [
        [
            `comment`,
            {
                'parent_author': parentAuthor,
                'parent_permlink': parentPermlink,
                'author': author,
                'permlink': permlink,
                'title': postTitle,
                'body': postBody,
                'json_metadata': JSON.stringify(jsonMetadata)
            }
        ],
        [
            `comment_options`,
            {
                'author': author,
                'permlink': permlink,
                'max_accepted_payout': (declinePayout) ? '0.000 GBG' : '1000000.000 GBG',
                'percent_steem_dollars': (allInPower) ? 0 : 10000,
                'allow_votes': true,
                'allow_curation_rewards': true,
                'extensions': [[
                    0,
                    {
                        'beneficiaries': beneficiariesLocal
                    }
                ]]
            }
        ]
    ];

    if (tool.isTest()) {
        console.log(section, operations);

        return false;
    }

    golos.broadcast.send(
        {'extensions': [], 'operations': operations},
        {'posting': wif},
        function (err, result) {
            if (!err) {
                tool.handleSuccessfulPost(section, result);
            } else {
                tool.handlePublishError(section, err);
            }
        }
    );
}

function publishToVox(
    wif,
    author,
    permlink,
    parentAuthor,
    parentPermlink,
    postTitle,
    postBody,
    jsonMetadata,
    declinePayout,
    allInPower,
    beneficiaries,
    forDs
) {
    let placeholdersLocal = {},
        section = 'vox';

    vox.api.setOptions({ url: 'wss://vox.community/ws' });
    vox.config.set('address_prefix', 'VOX');
    vox.config.set('chain_id', '88a13f63de69c3a927594e07d991691c20e4cf1f34f83ae9bd26441db42a8acd');

    if (false === tool.isTest() && false === vox.auth.isWif(wif)) {
        return alert('–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å—Ç–∏–Ω–≥ –∫–ª—é—á–∞. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π –≤–ª–µ—á–µ—Ç –ø–æ—Ç–µ—Ä—é –∞–∫–∫–∞—É–Ω—Ç–∞!');
    }

    let beneficiariesLocal = JSON.parse(JSON.stringify(beneficiaries));
    if (forDs) {
        beneficiariesLocal.push({"account": "denis-skripnik", "weight": 100});

        jsonMetadata['tags'].push('dpos-post');
    }

    for (let key in placeholdersLocal) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholdersLocal[key]);
    }
    for (let key in placeholders) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholders[key]);
    }
    postBody = tool.stripPlaceholders(postBody);

    let operations = [
        [
            `comment`,
            {
                'parent_author': parentAuthor,
                'parent_permlink': parentPermlink,
                'author': author,
                'permlink': permlink,
                'title': postTitle,
                'body': postBody,
                'json_metadata': JSON.stringify(jsonMetadata)
            }
        ],
        [
            `comment_options`,
            {
                'author': author,
                'permlink': permlink,
                'max_accepted_payout': (declinePayout) ? '0.000 GOLD' : '1000000.000 GOLD',
                'percent_steem_dollars': (allInPower) ? 0 : 10000,
                'allow_votes': true,
                'allow_curation_rewards': true,
                'extensions': [[
                    0,
                    {
                        'beneficiaries': beneficiariesLocal
                    }
                ]]
            }
        ]
    ];

    if (tool.isTest()) {
        console.log(section, operations);

        return false;
    }

    vox.broadcast.send(
        {'extensions': [], 'operations': operations},
        {'posting': wif},
        function (err, result) {
            console.log(section, err, result);
            if (!err) {
                tool.handleSuccessfulPost(section, result);
            } else {
                tool.handlePublishError(section, err)
            }
        }
    );
}

function publishToSteem(
    wif,
    author,
    permlink,
    parentAuthor,
    parentPermlink,
    postTitle,
    postBody,
    jsonMetadata,
    declinePayout,
    allInPower,
    beneficiaries
) {

    let section = 'steem',
        placeholdersLocal = {
            '{img_p_4}': `https://steemitimages.com/400x0/`,
            '{img_p_8}': `https://steemitimages.com/800x0/`
        };

    steem.api.setOptions({ url: "https://api.steemit.com" });

    // steem.api.setOptions({ url: 'wss://gtg.steem.house:8090' });
    // steem.config.set('address_prefix','STM');
    // steem.config.set('chain_id','0000000000000000000000000000000000000000000000000000000000000000');

    if (false === tool.isTest() && false === steem.auth.isWif(wif)) {
        return alert('–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å—Ç–∏–Ω–≥ –∫–ª—é—á–∞. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π –≤–ª–µ—á–µ—Ç –ø–æ—Ç–µ—Ä—é –∞–∫–∫–∞—É–Ω—Ç–∞!');
    }

    for (let key in placeholdersLocal) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholdersLocal[key]);
    }
    for (let key in placeholders) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholders[key]);
    }
    postBody = tool.stripPlaceholders(postBody);

    let operations = [
        [
            `comment`,
            {
                'parent_author': parentAuthor,
                'parent_permlink': parentPermlink,
                'author': author,
                'permlink': permlink,
                'title': postTitle,
                'body': postBody,
                'json_metadata': JSON.stringify(jsonMetadata)
            }
        ],
        [
            `comment_options`,
            {
                'author': author,
                'permlink': permlink,
                'max_accepted_payout': (declinePayout) ? '0.000 SBD' : '1000000.000 SBD',
                'percent_steem_dollars': (allInPower) ? 0 : 10000,
                'allow_votes': true,
                'allow_curation_rewards': true,
                // 'extensions': [[
                //     0,
                //     {
                //         'beneficiaries': beneficiaries
                //     }
                // ]]
                'extensions': []
            }
        ]
    ];

    if (tool.isTest()) {
        console.log(section, operations);

        return false;
    }

    steem.broadcast.send(
        {'extensions': [], 'operations': operations},
        {'posting': wif},
        function (err, result) {
            if (!err) {
                tool.handleSuccessfulPost(section, result);
            } else {
                tool.handlePublishError(section, err)
            }
        }
    );
}

function publishToWls(
    wif,
    author,
    permlink,
    parentAuthor,
    parentPermlink,
    postTitle,
    postBody,
    jsonMetadata,
    declinePayout,
    allInPower,
    beneficiaries
) {
    let section = 'wls',
        placeholdersLocal = {
            '{img_p_4}': `https://whaleshares.io/imageproxy/400x0/`,
            '{img_p_8}': `https://whaleshares.io/imageproxy/800x0/`,
            '{f_wls}': `---
<center>
Join our Whaleshares curation Group On Discord.
We look for quality contents and help the needful.
You are formally invited to out Group.
https://discord.gg/JAW8fBt
</center>
`
        };

    if (false === tool.isTest() && false === wlsjs.auth.isWif(wif)) {
        return alert('–í—ã –¥–æ–ø—É—Å—Ç–∏–ª–∏ –æ—à–∏–±–∫—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å—Ç–∏–Ω–≥ –∫–ª—é—á–∞. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–π –≤–ª–µ—á–µ—Ç –ø–æ—Ç–µ—Ä—é –∞–∫–∫–∞—É–Ω—Ç–∞!');
    }

    for (let key in placeholdersLocal) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholdersLocal[key]);
    }
    for (let key in placeholders) {
        postBody = postBody.replace(new RegExp(key, 'g'), placeholders[key]);
    }
    postBody = tool.stripPlaceholders(postBody);

    let operations = [
        [
            `comment`,
            {
                'parent_author': parentAuthor,
                'parent_permlink': parentPermlink,
                'author': author,
                'permlink': permlink,
                'title': postTitle,
                'body': postBody,
                'json_metadata': JSON.stringify(jsonMetadata)
            }
        ],
        [
            `comment_options`,
            {
                'author': author,
                'permlink': permlink,
                'max_accepted_payout': (declinePayout) ? '0.000 WLS' : '1000000.000 WLS',
                'percent_steem_dollars': (allInPower) ? 0 : 10000,
                'allow_votes': true,
                'allow_curation_rewards': true,
                'extensions': [[
                    0,
                    {
                        'beneficiaries': beneficiaries
                    }
                ]]
            }
        ]
    ];

    if (tool.isTest()) {
        console.log(section, operations);

        return false;
    }

    wlsjs.broadcast.send(
        {'extensions': [], 'operations': operations},
        {'posting': wif},
        function (err, result) {
            if (!err) {
                tool.handleSuccessfulPost(section, result);
            } else {
                tool.handlePublishError(section, err)
            }
        }
    );
}

module.exports = {
    publishToGolos: publishToGolos,
    publishToVox: publishToVox,
    publishToSteem: publishToSteem,
    publishToWls: publishToWls
}
